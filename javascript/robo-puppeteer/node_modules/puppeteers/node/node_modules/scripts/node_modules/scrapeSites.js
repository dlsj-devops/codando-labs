let sites = require('sites')
let db = require('db')({
	schemas: sites.schemas()
})

db.test()

let exp = function(args){
	// if(args.puppeteers){
	// 	let puppeteers = args.puppeteers
	// 	sites.forEach(site=>{
	// 		puppeteers.available()
	// 		.then(puppeteer=>{
	// 			for(var targetI in site){
	// 				let target = site[targetI]
	// 				let url = target.createUrl({self: target})

	// 				puppeteer.page.goto(url, { timeout: 10000 })
	// 				.then(()=>{
	// 					return puppeteer.page.waitForSelector(target.list.id).then((el)=>{return el})
	// 				})
	// 				.then((p)=>{
	// 					// return puppeteer.page.$eval(target.list.id,e=>{ 
	// 					// 	return e.value
	// 					// })
	// 					// .then(e=>{ 
	// 					// 	return e 
	// 					// })
	// 					return puppeteer.page.$$(target.list.id+" > *")
	// 					.then((els)=>{
	// 						return els 
	// 					})
	// 				})
	// 				.then(els=>{
	// 					if(els && els.length){
	// 						els.forEach(el=>{
	// 							var loop = Object.keys(target.schema)
	// 							loop.forEach((prop)=>{
	// 								// console.log(prop)
	// 							})
	// 						})
	// 					} else {
	// 						throw 'no products'
	// 					}
	// 				})
	// 				.catch(err=>{
	// 					console.error('something went wrong scraping: ', err)
	// 				})
	// 				// puppeteer
	// 				// .userAgent(target.userAgent || "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36")
	// 				// .open(url)
	// 				// .waitForSelector(target.list.id)
	// 				// .count(target.list.id + ' > li')
	// 				// .log()
	// 				// .evaluate(function(target){
	// 				// 	return target
	// 				// 	// $(target.list.id).children('li').each(function(){
	// 				// 	// 	console.log('this', this)
	// 				// 	// 	// console.log('product', product)
	// 				// 	// })
	// 				// })
	// 				// .then(function(ret){
	// 				// 	console.log('ret', ret)
	// 				// })
	// 			}
	// 		})
	// 	})
	// }
}

module.exports = exp