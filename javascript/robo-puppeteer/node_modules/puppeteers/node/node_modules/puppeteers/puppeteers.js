
let Puppeteer = require('puppeteer')
let browser = Puppeteer.launch()
module.exports = function(args){
	var args = args || {}
	let puppeteers = {
		"back stage": [],
		puppeteers: [],
		min: args.puppeteers || 4,
		"puppeteers in the puppet show": {},
		init(args){
			this["train puppeteers"]({number: args.min})
			this.log(args)
			this.poolAI(args)
			return this
		},
		max: args.max || 20,
		poolAI(args){
			this.poolAI.loop = this.poolAI.loop || setInterval(()=>{
				if(this["back stage"].length < this.min && this.puppeteers < this.max){
					this["train puppeteers"]({number: this.min - this["back stage"].length})
				}
			}, 100)
		},
		available(args){
			var args = args || {}
			return new Promise((resolve, reject)=>{
				let i = setInterval(()=>{
					if(this["back stage"].length > 0){
						clearInterval(i)
						let puppeteer = this["back stage"].shift()
						let name = args.name || Math.random()
						if(!this["puppeteers in the puppet show"][name]){
							this["puppeteers in the puppet show"][name] = puppeteer
						}
						resolve(puppeteer)
					}
				}, 50)
			})
		},
		"train puppeteers"(args){
			if(typeof args.number !== undefined && typeof args.number == 'number' && !this.training){
				console.log(`training ${args.number} ${args.number == 1 ? 'puppeteer' : 'puppeteers'}`)
				this.training = true
				let loop = new Array(args.number).fill(0)
				loop.forEach((l,i)=>{

					let puppeteer = {}
					browser
					.then((browser)=>{
						puppeteer.browser = browser
						return puppeteer.browser.newPage()
					})
					.then((page)=>{
						puppeteer.page = page
						puppeteers["back stage"].push(puppeteer)
						puppeteers.puppeteers.push(puppeteer)
						if(i == loop.length-1){
							this.training = false
						}
					})
				})
			}
		},
		log(args){
			let prevpuppeteers = undefined
			this.log.loop = this.log.loop || setInterval(() => {
				if(prevpuppeteers !== this["back stage"].length){
					console.log(`${this["back stage"].length} ${this["back stage"].length == 1 ? 'puppeteer' : 'puppeteers'} back stage, ${Object.keys(this["puppeteers in the puppet show"]).length} in the puppet show, ${this.puppeteers.length} in total.`)
					prevpuppeteers = this["back stage"].length
				}
			}, 100);
			return `${this["back stage"].length} ${this["back stage"].length == 1 ? 'puppeteer' : 'puppeteers'} back stage, ${Object.keys(this["puppeteers in the puppet show"]).length} in the puppet show, ${this.puppeteers.length} in total.`
		}
	}
	

	return puppeteers.init(args)
}

