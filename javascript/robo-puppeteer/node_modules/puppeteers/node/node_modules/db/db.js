const secrets = require('secrets')
const mongoose = require('mongoose')
const uuid = require('uuid/v4')
const db = {
	mongoose, 
	connection: mongoose.createConnection(
		uri(
			secrets.mongoDB, 
			{ 
				useMongoClient: true 
			}
		),
		{
			useNewUrlParser: true
		}
	),
	uri: uri(
		secrets.mongoDB, 
		{ 
			useMongoClient: true 
		}
	),
	schemas: [],
	models: {}
}

db.htmlSchemaToMongoose = function(args){
	if(args.schema){
		let loop = Object.keys(args.schema.props)
		let schema = {}
		loop.forEach(prop=>{
			schema[prop] = args.schema.props[prop].schema
		})
		let s = new db.mongoose.Schema(schema)
		db.schemas.push(s)
		let m = db.connection.model(args.schema.name, s)
		db.schemas[args.schema.name] = s
		db.models[args.schema.name] = m
	}
}
// model test
db.test = function(args){
		var test = new db.models['thing']({
			title: 'hey',
			price: 'nine ninety nine',
			thumbnail: 'lol.jpg'
		})

		console.log('hmmm')
		
		test
		.save(err=>{
			if(err) {
				console.error(err)
			}
		})
	}
	// test()
module.exports = function(args){
	var args = args || {}
	if(args.schemas){
		args.schemas.forEach(schema=>{
			db.htmlSchemaToMongoose({schema})
		})
	}
	return db
}

function uri(args){
	ret = "mongodb://" + (args.auth ? args.username + ":" + args.password + "@" : '') + args.ip + ":" + args.port + "/" + args.dbName + (args.auth ? "?authSource="+args.authDB+"" : '')
	return ret
}